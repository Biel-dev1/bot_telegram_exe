name: Build PainelCity EXE

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    env:
      VCPKG_ROOT: C:\vcpkg
      VCPKG_DEFAULT_TRIPLET: x64-windows

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Instalar vcpkg se necessário
        run: |
          if not exist %VCPKG_ROOT% (
            git clone https://github.com/microsoft/vcpkg %VCPKG_ROOT%
            %VCPKG_ROOT%\bootstrap-vcpkg.bat
          )

      - name: Cache dos pacotes vcpkg
        uses: actions/cache@v3
        with:
          path: |
            %VCPKG_ROOT%\installed
            %VCPKG_ROOT%\packages
          key: ${{ runner.os }}-vcpkg-${{ env.VCPKG_DEFAULT_TRIPLET }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-

      - name: Instalar dependências via vcpkg
        run: |
          %VCPKG_ROOT%\vcpkg.exe install openssl cpp-httplib nlohmann-json --triplet %VCPKG_DEFAULT_TRIPLET%

      - name: Preparar ambiente MSVC
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"

      - name: Compilar PainelCity.exe
        shell: cmd
        run: |
          set INCLUDE=%VCPKG_ROOT%\installed\%VCPKG_DEFAULT_TRIPLET%\include;include;%INCLUDE%
          set LIB=%VCPKG_ROOT%\installed\%VCPKG_DEFAULT_TRIPLET%\lib;%LIB%
          cl painelcity.cpp /EHsc /std:c++17 ^
            /I"%VCPKG_ROOT%\installed\%VCPKG_DEFAULT_TRIPLET%\include" ^
            /I"include" ^
            /link ^
            /LIBPATH:"%VCPKG_ROOT%\installed\%VCPKG_DEFAULT_TRIPLET%\lib" ^
            libssl.lib libcrypto.lib crypt32.lib ^
            /OUT:PainelCity.exe

      - name: Upload do executável
        uses: actions/upload-artifact@v4
        with:
          name: painelcity-exe
          path: PainelCity.exe
